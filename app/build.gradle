plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'maven-publish'
}
group = 'com.github.nisargtrivedi'

afterEvaluate{
    publishing {
        publications {
            release(MavenPublication) {
                from components.findByName('release')
                groupId = 'com.regula.documentreader'
                artifactId = 'scannerSDK'
                version = '1.6'
            }
        }
        repositories {
            maven {
                name = 'scannerSDK'
                url = "${project.buildDir}/scannerSDK"
            }
        }
    }
}
android {
    compileSdk 35
    namespace = "com.regula.documentreader"
    defaultConfig {
        applicationId "com.regula.documentreader"
        minSdk 24
        targetSdk 34
        versionCode 1
        versionName "1.0"
    }


    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug{
            debuggable true
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }

    viewBinding {
        enabled = true
    }
    publishing {
        singleVariant('release') {
            withSourcesJar()
            withJavadocJar()
        }
    }

}

dependencies {
    //implementation fileTree(dir: 'libs', include: ['*.jar', '*.aar'])
    implementation 'androidx.core:core-ktx:1.15.0'
    implementation 'androidx.appcompat:appcompat:1.7.0'
    implementation 'com.google.android.material:material:1.12.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.2.1'
    implementation project(':HBScanner')
    //implementation(name: 'HBScanner', ext: 'aar')

//    implementation('com.regula.documentreader:api:7.5.+@aar') {
//        transitive = true
//    }
   // implementation files("libs/HBScanner.aar")

}
tasks.register('generateRepo', Zip) {
    def publishTask = tasks.named('scannerSDK')
    from publishTask.map { it.getRepository().getUrl() }
    into 'scannerSDK'
    archiveFileName.set('scannerSDK.zip')
}